import dotenv from "dotenv"
import { Bot } from "grammy"

dotenv.config()

const bot = new Bot(process.env.TOKEN)
const chatId = -1002084678955
const myMSG =
	'*12 Традиций:*\n\nКак я могу ежедневно просить Бога помочь мне ставить общее благополучие на первое место и увидеть, как моё «личное» зависит от единства?\n\nКак я могу каждое утро на этой неделе просить Бога быть моим Руководителем и избегать веры слухам без доказательств?\n\nКак мне на этой неделе избегать ролей судьи, присяжного или палача в моих взаимоотношениях и учиться смирению и терпению у самых недисциплинированных людей?\n\nКак моё поведение может не мешать другим людям на протяжении этой недели?\n\nКак я могу избегать давания советов и заниматься только тем, в чём я являюсь профессионалом на этой неделе?\n\nКак мне следить за тем, чтобы мои отношения с людьми не портились из-за денег, собственности или престижа на этой неделе?\n\nКак я могу в течение двух месяцев не дарить и не принимать подарки, всегда платя за себя?\n\nКак мне практиковать принцип "безвозмездно полученное – отдай безвозмездно" в моей жизни?\n\nКак я могу вести за собой личным примером, а не управлять по мандату, и помнить, что служение основано на доброй воле?\n\nКак мне избегать высказываний о том, в чём я плохо разбираюсь, и не сплетничать на этой неделе?\n\nКак мне быть внимательным в своих действиях и поступках, не «ЯКАТЬ», а делать, помня о рисках быть на виду?\n\nКак мне подчиняться принципам, усмиряя своё «я» на этой неделе?'

  
async function sendMessage() {
	await bot.api.sendMessage(chatId, myMSG, {
		parse_mode: "Markdown",
	})
}

// Обработчик запроса
export default async function handler(req, res) {
	// Проверка авторизации
	if (req.headers["authorization"] !== `Bearer ${process.env.CRON_SECRET}`) {
		return res.status(401).end("Unauthorized")
	}

	// Попытка отправить сообщение и ответить на запрос
	try {
		await sendMessage()
		res.status(200).end("Hello Cron! Сообщение отправлено.")
	} catch (error) {
		res.status(500).end("Ошибка при отправке сообщения.")
	}
}
